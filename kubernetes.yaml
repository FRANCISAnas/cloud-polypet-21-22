apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wildcard-host
spec:
  rules:
    - http:
        paths:
          - pathType: ImplementationSpecific
            path: "/accounting/*"
            backend:
              service:
                name: accounting-service
                port:
                  number: 8001
          - pathType: ImplementationSpecific
            path: "/*"
            backend:
              service:
                name: customer-care-service
                port:
                  number: 8083
          - pathType: ImplementationSpecific
            path: "/catalog/*"
            backend:
              service:
                name: catalogmanager-service
                port:
                  number: 8081
          - pathType: ImplementationSpecific
            path: "/sitemonitoring/*"
            backend:
              service:
                name: sitemonitoring-service
                port:
                  number: 8004
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sitemonitoring-deployment
  labels:
    app: sitemonitoring
spec:
  selector:
    matchLabels:
      app: sitemonitoring
  template:
    metadata:
      labels:
        app: sitemonitoring
    spec:
      containers:
      - name: sitemonitoring-container
        image: gcr.io/helpful-envoy-330512/site_monitoring
        env:
          - name: POSTGRES_SERVER_URL
            value: $POSTGRES_SERVER_URL
          - name: SERVER_SERVLET_CONTEXT_PATH
            value: "/sitemonitoring"
          - name: PORT
            value: "8004"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://$POSTGRES_SERVER_URL:5432/cloudpolypetsitemonitoringdb"
          - name: SPRING_DATASOURCE_USERNAME
            value: "postgres"
          - name: SPRING_DATASOURCE_PASSWORD
            value: "$POSTGRES_SERVER_PWD"
        ports:
        - containerPort: 8004
        readinessProbe:
          httpGet:
            path: "/sitemonitoring/actuator/health"
            port: 8004
          initialDelaySeconds: 10
          timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogmanager-deployment
  labels:
    app: catalogmanager
spec:
  selector:
    matchLabels:
      app: catalogmanager
  template:
    metadata:
      labels:
        app: catalogmanager
    spec:
      containers:
      - name: catalogmanager-container
        image: gcr.io/helpful-envoy-330512/catalog_manager
        env:
          - name: POSTGRES_SERVER_URL
            value: $POSTGRES_SERVER_URL
          - name: SERVER_SERVLET_CONTEXT_PATH
            value: "/catalog"
          - name: MONITOR_SITE_URL
            value: "http://sitemonitoring-service:8004"
          - name: SERVER_DNS_ADDRESS
            value: "http://35.241.189.130:31000"
          - name: PORT
            value: "8081"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://$POSTGRES_SERVER_URL:5432/catalogdb"
          - name: SPRING_DATASOURCE_USERNAME
            value: "postgres"
          - name: SPRING_DATASOURCE_PASSWORD
            value: "$POSTGRES_SERVER_PWD"
        ports:
        - containerPort: 8081
        readinessProbe:
          httpGet:
            path: "/catalog/actuator/health"
            port: 8081
          initialDelaySeconds: 10
          timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-care-deployment
  labels:
    app: customer-care
spec:
  selector:
    matchLabels:
      app: customer-care
  template:
    metadata:
      labels:
        app: customer-care
    spec:
      containers:
      - name: customer-care-container
        image: gcr.io/helpful-envoy-330512/customer_care
        env:
          - name: POSTGRES_SERVER_URL
            value: $POSTGRES_SERVER_URL
          - name: INVENTORY_URL
            value: "http://catalogmanager-service:8081/catalog"
          - name: DELIVERY_URL
            value: "http://localhost:5001"
          - name: BANK_URL
            value: "https://archicloud-j-bank.herokuapp.com"
          - name: ACCOUNTING_URL
            value: "http://accounting-service:8001/accounting"
          - name: MONITOR_SITE_URL
            value: "http://sitemonitoring-service:8004/sitemonitoring"
          - name: PORT
            value: "8083"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://$POSTGRES_SERVER_URL:5432/customercaredb"
          - name: SPRING_DATASOURCE_USERNAME
            value: "postgres"
          - name: SPRING_DATASOURCE_PASSWORD
            value: "$POSTGRES_SERVER_PWD"
        ports:
        - containerPort: 8083
        readinessProbe:
          httpGet:
            path: "/actuator/health"
            port: 8083
          initialDelaySeconds: 10
          timeoutSeconds: 5
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounting-deployment
  labels:
    app: accounting
spec:
  selector:
    matchLabels:
      app: accounting
  template:
    metadata:
      labels:
        app: accounting
    spec:
      containers:
      - name: accounting-container
        image: gcr.io/helpful-envoy-330512/accounting
        env:
          - name: POSTGRES_SERVER_URL
            value: $POSTGRES_SERVER_URL
          - name: SERVER_SERVLET_CONTEXT_PATH
            value: "/accounting"
          - name: PORT
            value: "8001"
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:postgresql://$POSTGRES_SERVER_URL:5432/cloudpolypetaccountingdb"
          - name: SPRING_DATASOURCE_USERNAME
            value: "postgres"
          - name: SPRING_DATASOURCE_PASSWORD
            value: "$POSTGRES_SERVER_PWD"
        ports:
        - containerPort: 8001
        readinessProbe:
          httpGet:
            path: "/accounting/actuator/health"
            port: 8001
          initialDelaySeconds: 10
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: sitemonitoring-service
spec:
  type: NodePort
  selector:
    app: sitemonitoring
  ports:
  - protocol: TCP
    port: 8004
    targetPort: 8004
    nodePort: 31004
---
apiVersion: v1
kind: Service
metadata:
  name: catalogmanager-service
spec:
  type: NodePort
  selector:
    app: catalogmanager
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
    nodePort: 31000
---
apiVersion: v1
kind: Service
metadata:
  name: customer-care-service
spec:
  type: NodePort
  selector:
    app: customer-care
  ports:
  - protocol: TCP
    port: 8083
    targetPort: 8083
    nodePort: 32000
---
apiVersion: v1
kind: Service
metadata:
  name: accounting-service
spec:
  type: NodePort
  selector:
    app: accounting
  ports:
  - protocol: TCP
    port: 8001
    targetPort: 8001
    nodePort: 32001